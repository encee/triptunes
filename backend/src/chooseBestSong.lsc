import fetch from 'isomorphic-fetch'
import { sortBy, reverse } from 'lodash'

// Take a place and a list of all song matches and selects most popular from Spotify results
export default chooseBestSong(place, songs) -/>
  // for each song, create Spotify query URL
  // Ex. https://api.spotify.com/v1/search?q=track:san%20francisco%20lights%20artist:bobbi%20humphrey&type=track
  // https://api.spotify.com/v1/search?q=track:{trackTitle}%20artist:{artistName}&type=track
  allSongs = []

  for song of songs:
    { trackTitle, artistName } = song
    songQuery = encodeURI(`https://api.spotify.com/v1/search?q=track:${trackTitle} artist:${artistName}&type=track`)

    // grab JSON from Spotify query
    response <- fetch(songQuery)
    responseJSON <- response.json()

    for track of responseJSON.tracks.items:
      { id, uri, name, popularity } = track

      // push all songs into allSongs
      allSongs.push({ id, uri, name, popularity, artistName })

  // find most popular song from allSongs
  mostPopularSong = allSongs~sortBy('popularity')~reverse()[0]
  console.log(mostPopularSong)

  return mostPopularSong
