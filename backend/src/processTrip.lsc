import getTrip from './getTrip'
import getPlacesFromTrip from './getPlacesFromTrip'
import getAllSongs from './getAllSongs'
import chooseBestTracks from './chooseBestTracks'


processTrip(origin, destination) -/>
  console.log({ origin, destination })
  tripCoordinates <- getTrip(origin, destination)

  let places <- getPlacesFromTrip(tripCoordinates)

  now places <- Promise.all(places.map((place) -/> {
    try {
      songs <- getAllSongs(place.name)
      bestTracks <- chooseBestTracks(place.name, songs)
      if not bestTracks?.length: return null

      return {
        place: {
          name: place.name
          id: place.id
        }
        tracks: bestTracks
      }
    } catch (err) {
      console.error(err)
      return null
    }
  }).filter(Boolean))

  now places = places.filter(Boolean)

  { places }

export default processTrip
